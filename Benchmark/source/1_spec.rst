spec2017 & spec2006
---------------------

spec工具介绍
>>>>>>>>>>>>

``SPEC`` 组织开发的测试工具 ``SPEC cpu`` ,旨在全面评估CPU在科学计算、商业应用以及多媒体处理等不同任务中的
性能,是一个付费软件,有2006和2017两个版本。

``SPEC cpu2017`` 侧重于CPU,内存,编译器的性能测量,其 ``iso`` 中包含基准测试的源代码,用于编译、运行、
验证和报告基准的工具集,适用于多种操作系统的预编译工具, ``SPEC cpu2017`` 工具的源代码,适用于预编
译工具未涵盖的系统,文档,运行和报告规则。

``SPEC cpu2006`` 包含 ``SPECint`` (整数运算,包含12个测试项), ``SPECfp`` (浮点数运算,包含17个测
试项),两种基准测试,总共29个测试项。详情参考[Q11](https://www.spec.org/cpu2006/Docs/readme1st.html)

``SPEC cpu 2017`` 包含 ``SPECspeed 2017 Integer`` , ``SPECspeed 2017 Floating Point`` ,
``SPECrate 2017 Integer`` , ``SPECrate 2017 Floating Point`` 四种基准测试,总共43个
测试项详情参考[Q13](https://www.spec.org/cpu2017/Docs/overview.html#suites)

更多信息也可以参考第12章(https://foxsen.github.io/archbase/)

``SPEC_cpu`` 套件的基准测试项和不同的基准测试标准差异如下图和表所示

.. figure:: ./SPEC_CPU.png
   :alt: SPEC测试套件介绍
   :scale: 20
   :align: center

.. list-table:: SPEC cpu 2017
    :widths: 3 10 10 15 15
    :header-rows: 1

    * - 简称
      - 套件名
      - 内容
      - 指标
      - 备注
    * - Intspeed
      - SPECspeed2017Integer
      - 10 integer benchmarks
      - SPECspeed2017_int_base,
        SPECspeed2017_int_peak
      - SPECspeed套件为每个基准运行一个副本,
        得分高的意味着花费的时间越少。
    * - Fpspeed
      - SPECspeed2017 Floating Point
      - 10 floating point benchmark
      - SPECspeed2017_fp_base,
        SPECspeed2017_fp_peak
      - SPECspeed套件为每个基准运行一个副本;
        得分高的意味着花费的时间越少。
    * - Intrate
      - SPECrate2017Integer
      - 10 integer benchmarks
      - SPECrate2017_int_base,
        SPECrate2017_int_peak
      - SPECrate套件为每个基准运行多个并发的副本,
        由测试人员选择多少个副本;
        得分高的意味着有更高的吞吐量。
    * - fprate
      - SPECrate2017Floating Point
      - 13 floating point benchmark
      - SPECrate2017_fp_base、
        SPECrate2017_fp_peak
      - SPECrate套件为每个基准运行多个并发的副本;
        由测试人员选择多少个副本;
        得分高意味着更高的吞吐量

原文的描述如下图所示

.. figure:: ./SPECmetrics.png
   :alt: SPEC测试套件介绍
   :scale: 20
   :align: center

每个基准测试的指标为时间之比 :math:`T_{ref} / T_{test}`

整体规格 ``SPECspeed`` , ``SPECrate`` 等指标为相应各个比率的几何平均值。

spec工具使用方法
>>>>>>>>>>>>>>>>>>>>

详细步骤
^^^^^^^^^^^^^^^^

- 预留1~2GB内存(SPECrate)或16GB(SPECspeed)
- 250GB磁盘空间
- C、C++ 和 Fortran 编译器


在工作网络下从NAS中下载 ``spec2017 iso`` (https://disk.sophgo.vip/sharing/co87CqFCF),也可以通过路径/bsp/_SG2042/BenchmarkTools寻找

.. code:: bash

   #创建工作目录
   mkdir mnt spec2017

   # 挂载ISO
   sudo mount -o loop,ro cpu2017-1.1.9.iso mnt/

   #安装spec2017
   #详情可以查看/home/weic/spec2017/runcpu-test.linux-riscv64.
   cd mnt
   ./install.sh

   #如果缺少libcrypto.so.1,需要安装完整的openssl库
   sudo dnf install libxcrypt-compat # on Fedora

   /home/ubuntu/spec2017 #输入spec2017的安装路径

   #创建spec2017的RISC-V配置文件
   cd config
   cp Example-gcc-linux-aarch64.cfg gcc-linux-riscv.cfg

修改配置文件过程如下

.. code:: cfg

   67c67
   < %   define  build_ncpus  128   #      Or, you can set it on the command line:
   ---
   > %   define  build_ncpus  8     #      Or, you can set it on the command line:
   69a70,79
   > # Don't change this part.
   > %ifdef %{GCC4}
   > %   define model        ""    # mabi not present in older GCC 4
   > %elif %{bits} == 64
   > %   define model        -mabi=lp64
   > %elif %{bits} == 32
   > %   define model        -mabi=ilp32
   > %else
   > %   error Please define number of bits - see instructions in config file
   > %endif
   94,95c104,105
   < reportable           = 1
   < tune                 = base       # EDIT if needed: set to "base" for old GCC.
   ---
   > reportable           = 0
   > tune                 = base,peak  # EDIT if needed: set to "base" for old GCC.
   145c155
   < %   define  gcc_dir        ""  # EDIT (see above)
   ---
   > %   define  gcc_dir        "/opt/rh/devtoolset-9/root/usr"  # EDIT (see above)
   156c166
   < %define GCCge10  # EDIT: remove the '#' from column 1 if using GCC 10 or later
   ---
   > #%define GCCge10  # EDIT: remove the '#' from column 1 if using GCC 10 or later
   162,165c172,177
   <    SPECLANG                = %{gcc_dir}
   <    CC                      = $(SPECLANG)gcc     -std=c99
   <    CXX                     = $(SPECLANG)g++     -std=c++03
   <    FC                      = $(SPECLANG)gfortran
   ---
   >    preENV_LD_LIBRARY_PATH  = %{gcc_dir}/lib64/:%{gcc_dir}/lib/:/lib64
   >   #preENV_LD_LIBRARY_PATH  = %{gcc_dir}/lib64/:%{gcc_dir}/lib/:/lib64:%{ENV_LD_LIBRARY_PATH}
   >    SPECLANG                = %{gcc_dir}/bin/
   >    CC                      = $(SPECLANG)gcc     -std=c99   %{model}
   >    CXX                     = $(SPECLANG)g++     -std=c++03 %{model}
   >    FC                      = $(SPECLANG)gfortran           %{model}
   196c208
   < %   define suffix RV32
   ---
   > %   define suffix AARCH32
   198c210
   < %   define suffix RV64
   ---
   > %   define suffix AARCH64
   200c212
   <    PORTABILITY    = -DSPEC_LINUX_AARCH64
   ---
   >    PORTABILITY    = -DSPEC_LINUX_%{suffix}
   304c316
   <    OPTIMIZE         = -g -O3 -static
   ---
   >    OPTIMIZE         = -g -O3 -mcpu=native

.. code:: bash
   
   #导入spec2017环境
   cd ../
   source shrc

   #编译intrate和fprate
   runcpu --action=build --tune=base --config=gcc-linux-riscv.cfg intrate
   runcpu --action=build --tune=base --config=gcc-linux-riscv.cfg fprate

   #清理缓存(需要root权限)
   sudo -i
   echo 1 > /proc/sys/vm/drop_caches

   #运行spec2017的intrate和fprate
   runcpu --action=run --tune=base --config=gcc-linux-riscv.cfg --copies=1 --reportable intrate
   runcpu --action=run --tune=base --config=gcc-linux-riscv.cfg --copies=1 --reportable fprate

   #连接CPU和内存(如果有需要的话)
   numactl --cpunodebind=4 --membind=4 runcpu --action=run --tune=base 
            --config=gcc-linux-riscv.cfg --copies=1 --reportable intrate
   numactl --cpunodebind=0 --membind=0 runcpu --action=run --tune=base 
            --config=gcc-linux-riscv.cfg --copies=1 --reportable intrate

   #运行特定benchmark
   runcpu --action=run --tune=base --config=gcc-linux-riscv.cfg --copies=1 502

针对 *runcpu* 命令一些可以替换的选择

.. code::

   --tune=<base|peek> # 用于指定优化模式,可选参数为base(使用严格的编译器选项限制,
               #所有测试项均使用相同的优化选项)、peak(允许更自由的优化,不同测试项使用不同优化选项),
               #通常使用base选项,具体可参考(https://www.spec.org/cpu2006/Docs/readme1st.html#Q14)
   --reportable --noreportable # noreportable表示不需要生成报告,reportable会生成一个txt文件
   --size=<test|train|ref> #:用于指定测试数据集及规模,可选参数为test(最小测试数据集,
               #用于验证环境是否正常)、train(用于调试的数据集规模)、ref(标准测试规模,适用于正式基准测试)
   --copies=1 # 制定rate运行多少个copies
   --action # run and build


运行结果示例
^^^^^^^^^^^^^^^^

.. figure:: SPEC.png
  :alt: SPEC运行示例
  :scale: 20
  :align: center

SPEC2006测试结果
>>>>>>>>>>>>>>>>>

.. 测试结果中,base的值表示基于标准配置或默认设置的性能结果
.. spec2017rate floating point测试结果示例如下

.. .. figure:: ./2024-12-02-13-29-00.png
..    :alt: spec2017测试结果
..    :scale: 50
..    :align: center

测试环境: ``SG2042 EVB`` , ``32GB * 4 DDR`` , ``Fedora38`` , ``64 core C920@2.0GHz``

测试结果如下

+-------------------+--------------+
| test project      | test result  |
+===================+==============+
| int rate  1  copy | 8.6          |
+-------------------+--------------+
| int rate 32 copy  | 184.0        |
+-------------------+--------------+
| int rate 64 copy  | 306.0        |
+-------------------+--------------+
| fp rate  1  copy  | 9.7          |
+-------------------+--------------+
| fp rate  32 copy  | 170.0        |
+-------------------+--------------+
| fp rate  64 copy  | 268.0        |
+-------------------+--------------+

SPEC2017 测试结果
>>>>>>>>>>>>>>>>>>>>>>

测试环境1
^^^^^^^^^^^


- SG2042 EVB
- 32GB * 4 DDR
- Fedora38
- 64 core C920@2.0GHz

+------------------+-------------+
| test project     | test result |
+==================+=============+
| int rate 1 copy  | 1.6         |
+------------------+-------------+
| int rate 32 copy | 28.5        |
+------------------+-------------+
| int rate 64 copy | 45.6        |
+------------------+-------------+
| fp rate 1 copy   | 1.3         |
+------------------+-------------+
| fp rate 32 copy  | 29.4        |
+------------------+-------------+
| fp rate 64 copy  | 42.1        |
+------------------+-------------+

+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+
| intrate         | disable l0 | disable l0 rs | disable l0 rs l3 | performance loss(l0 rs) (dis l0 - dis l0 rs)/dis l0 | performance loss(l0 rs l3)(dis l0 rs - dis l0 rs l3)/dis l0 rs  |
+=================+============+===============+==================+=====================================================+=================================================================+
| 500.perlbench_r | 47.6       | 44.2          | 44.4             | 7.14%                                               | -0.45%                                                          |
+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+
| 502.gcc_r       | 33.9       | 31.3          | 31.1             | 7.67%                                               | 0.64%                                                           |
+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+
| 505.mcf_r       | 25.5       | 25.3          | 25.7             | 0.78%                                               | -1.58%                                                          |
+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+
| 520.omnetpp_r   | 21.8       | 20.3          | 20.4             | 6.88%                                               | -0.49%                                                          |
+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+
| 523.xalancbmk_r | 13.3       | 12.7          | 12.9             | 4.51%                                               | -1.57%                                                          |
+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+
| 525.x264_r      | 69.8       | 67.7          | 65.4             | 3.01%                                               | 3.40%                                                           |
+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+
| 531.deepsjeng_r | 69.1       | 54.9          | 56.2             | 20.55%                                              | -2.37%                                                          |
+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+
| 541.leela_r     | 78.4       | 59.6          | 61.8             | 23.98%                                              | -3.69%                                                          |
+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+
| 548.exchange2_r | 234        | 231           | 164              | 1.28%                                               | 29.00%                                                          |
+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+
| 557.xz_r        | 37         | 36.7          | 36.9             | 0.81%                                               | -0.54%                                                          |
+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+
|                 | 45.6       | 42            | 40.8             | 7.89%                                               | 2.86%                                                           |
+-----------------+------------+---------------+------------------+-----------------------------------------------------+-----------------------------------------------------------------+

测试环境2
^^^^^^^^^^^

- SG2042 Server
- 32GB * 8 DDR
- Fedora38
- 128 core C920@2.0GHz

+-------------------+-------------+
| test project      | test result |
+===================+=============+
| int rate 128 copy | 45.5        |
+-------------------+-------------+
| fp rate 128 copy  | 35.5        |
+-------------------+-------------+

+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| fprate          | disable l0 | disable l0 rs | disable l0 rs l3 | performance (l0 rs)(dis l0 - dis l0 rs)/dis l0 | performance(l0 rs l3)(dis l0 rs - dis l0 rs l3)/dis l0 rs  |
+=================+============+===============+==================+================================================+============================================================+
| 503.bwaves_r    | 107        | 107           | 109              | 0.00%                                          | -1.87%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 507.cactuBSSN_r | 29.6       | 29.7          | 29.8             | -0.34%                                         | -0.34%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 508.namd_r      | 79.8       | 78.6          | 80.2             | 1.50%                                          | -2.04%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 510.parest_r    | 28.2       | 27.7          | 27.9             | 1.77%                                          | -0.72%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 511.povray_r    | 66.5       | 52.2          | 52               | 21.50%                                         | 0.38%                                                      |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 519.lbm_r       | 11.1       | 10.3          | 11.1             | 7.21%                                          | -7.77%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 521.wrf_r       | 46         | 43.9          | 45.2             | 4.57%                                          | -2.96%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 526.blender_r   | 58.3       | 56.4          | 56.6             | 3.26%                                          | -0.35%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 527.cam4_r      | 51.2       | 48.3          | 48.9             | 5.66%                                          | -1.24%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 538.imagick_r   | 57.6       | 52.2          | 55.7             | 9.38%                                          | -6.70%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 544.nab_r       | 67         | 64            | 64.5             | 4.48%                                          | -0.78%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 549.fotonik3d_r | 25         | 23.9          | 25.1             | 4.40%                                          | -5.02%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
| 554.roms_r      | 19         | 18.3          | 19               | 3.68%                                          | -3.83%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
|                 | 42.1       | 39.9          | 40.9             | 5.23%                                          | -2.51%                                                     |
+-----------------+------------+---------------+------------------+------------------------------------------------+------------------------------------------------------------+
